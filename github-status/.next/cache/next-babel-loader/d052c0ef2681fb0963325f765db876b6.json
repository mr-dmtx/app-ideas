{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\estagio\\\\Documents\\\\app-ideas\\\\github-status\\\\pages\\\\index.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport './index.css';\n\nclass compsGitHub extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      comps: [],\n      aviso: ''\n    });\n  }\n\n  getComps() {\n    axios.get('https://kctbh9vrtdwd.statuspage.io/api/v2/components.json').then(res => {\n      console.log(res.data.components);\n      this.setState({\n        comps: res.data.components\n      });\n    }).catch(e => {\n      console.log(\"Não foi possivel carregar o conteudo! Atualize a página! \" + e);\n    });\n  }\n\n  componentWillMount() {\n    this.getComps();\n  } //{comp.name} | { comp.status == 'operational' ? 'Funcionando' : 'Fora do ar'} \n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"GitHub Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }, this), this.state.comps.map(comp => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"_1WX-ZNh1u_6_qUFuQYrWF\",\n        children: /*#__PURE__*/_jsxDEV(\"compsStatus\", {\n          status: \"comp.status\",\n          name: \"comp.name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 6\n        }, this)\n      }, comp.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.getComps(),\n        children: \"Atualizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nclass compsStatus extends React.Component {\n  render() {\n    let statusC = this.props.status;\n    let compGit = this.props.name;\n    let text = '';\n\n    if (statusC == 'operational') {\n      statusC = 'Funcionando';\n      text = statusC;\n    } else {\n      statusC = 'Fora do ar';\n      text = statusC + ' - Motivo: ' + this.props.status;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default compsGitHub;","map":{"version":3,"sources":["C:/Users/estagio/Documents/app-ideas/github-status/pages/index.js"],"names":["React","Component","ReactDOM","axios","compsGitHub","comps","aviso","getComps","get","then","res","console","log","data","components","setState","catch","e","componentWillMount","render","state","map","comp","id","compsStatus","statusC","props","status","compGit","name","text"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;AAGA,MAAMC,WAAN,SAA0BJ,KAAK,CAACC,SAAhC,CAA0C;AAAA;AAAA;;AAAA,mCAChC;AACNI,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE;AAFD,KADgC;AAAA;;AAMxCC,EAAAA,QAAQ,GAAE;AACTJ,IAAAA,KAAK,CAACK,GAAN,CAAU,2DAAV,EACIC,IADJ,CACSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,UAArB;AACC,WAAKC,QAAL,CAAc;AAAEV,QAAAA,KAAK,EAAEK,GAAG,CAACG,IAAJ,CAASC;AAAlB,OAAd;AACD,KAJJ,EAKIE,KALJ,CAKUC,CAAC,IAAI;AACXN,MAAAA,OAAO,CAACC,GAAR,CAAY,8DAA8DK,CAA1E;AACA,KAPJ;AAQA;;AAEDC,EAAAA,kBAAkB,GAAE;AACnB,SAAKX,QAAL;AACA,GAnBuC,CAoB1C;;;AACEY,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,EAEO,KAAKC,KAAL,CAAWf,KAAX,CAAiBgB,GAAjB,CAAqBC,IAAI,iBAC1B;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,+BACL;AAAa,UAAA,MAAM,EAAC,aAApB;AAAkC,UAAA,IAAI,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA;AADK,SAA6CA,IAAI,CAACC,EAAlD;AAAA;AAAA;AAAA;AAAA,cADC,CAFP,eAQK;AAAQ,QAAA,OAAO,EAAE,KAAKhB,QAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARL;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAYC;;AAlCsC;;AAqC1C,MAAMiB,WAAN,SAA0BxB,KAAK,CAACC,SAAhC,CAAyC;AAExCkB,EAAAA,MAAM,GAAE;AACP,QAAIM,OAAO,GAAG,KAAKC,KAAL,CAAWC,MAAzB;AACA,QAAIC,OAAO,GAAG,KAAKF,KAAL,CAAWG,IAAzB;AACA,QAAIC,IAAI,GAAG,EAAX;;AAEA,QAAGL,OAAO,IAAI,aAAd,EAA4B;AAC3BA,MAAAA,OAAO,GAAG,aAAV;AACAK,MAAAA,IAAI,GAAGL,OAAP;AACA,KAHD,MAII;AACHA,MAAAA,OAAO,GAAG,YAAV;AACAK,MAAAA,IAAI,GAAGL,OAAO,GAAG,aAAV,GAA0B,KAAKC,KAAL,CAAWC,MAA5C;AACA;;AACD,wBAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAKA;;AApBuC;;AAuBzC,eAAevB,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport './index.css';\r\n\r\n\r\nclass compsGitHub extends React.Component {\r\n  state = {\r\n    comps: [],\r\n    aviso: ''\r\n  }\r\n\r\n  getComps(){\r\n  \taxios.get('https://kctbh9vrtdwd.statuspage.io/api/v2/components.json')\r\n      .then(res => {\r\n      \tconsole.log(res.data.components);\r\n        this.setState({ comps: res.data.components });\r\n      })\r\n      .catch(e => {\r\n      \tconsole.log(\"Não foi possivel carregar o conteudo! Atualize a página! \" + e);\r\n      })\r\n  }\r\n\r\n  componentWillMount(){\r\n  \tthis.getComps();\r\n  }\r\n//{comp.name} | { comp.status == 'operational' ? 'Funcionando' : 'Fora do ar'} \r\n  render() {\r\n  \treturn(\r\n  \t\t<div>\r\n  \t\t\t<h1>GitHub Status</h1>\r\n\t        { this.state.comps.map(comp => \r\n\t        \t<div className='_1WX-ZNh1u_6_qUFuQYrWF' key={comp.id}> \r\n\t\t\t\t\t<compsStatus status=\"comp.status\" name=\"comp.name\"/>\r\n\t        \t</div>\t\r\n\t        )}\r\n\r\n\t        <button onClick={this.getComps()}>Atualizar</button>\r\n      \t</div>\r\n    \t)\r\n  \t}\r\n}\r\n\r\nclass compsStatus extends React.Component{\r\n\r\n\trender(){\r\n\t\tlet statusC = this.props.status;\r\n\t\tlet compGit = this.props.name;\r\n\t\tlet text = '';\r\n\r\n\t\tif(statusC == 'operational'){\r\n\t\t\tstatusC = 'Funcionando';\r\n\t\t\ttext = statusC;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tstatusC = 'Fora do ar';\r\n\t\t\ttext = statusC + ' - Motivo: ' + this.props.status;\r\n\t\t}\r\n\t\treturn(\r\n\r\n\t\t\t<p>text</p>\r\n\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default compsGitHub;"]},"metadata":{},"sourceType":"module"}