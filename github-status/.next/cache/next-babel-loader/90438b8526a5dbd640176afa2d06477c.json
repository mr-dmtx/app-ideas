{"ast":null,"code":"import _classCallCheck from \"C:/Users/estagio/Documents/app-ideas/github-status/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/estagio/Documents/app-ideas/github-status/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/estagio/Documents/app-ideas/github-status/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/estagio/Documents/app-ideas/github-status/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"C:/Users/estagio/Documents/app-ideas/github-status/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:/Users/estagio/Documents/app-ideas/github-status/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"C:/Users/estagio/Documents/app-ideas/github-status/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\estagio\\\\Documents\\\\app-ideas\\\\github-status\\\\pages\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport './index.css';\n\nvar compsGitHub = /*#__PURE__*/function (_React$Component) {\n  _inherits(compsGitHub, _React$Component);\n\n  var _super = _createSuper(compsGitHub);\n\n  function compsGitHub() {\n    var _this;\n\n    _classCallCheck(this, compsGitHub);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      comps: [],\n      aviso: ''\n    });\n\n    return _this;\n  }\n\n  _createClass(compsGitHub, [{\n    key: \"setComp\",\n    value: function setComp() {\n      this.setState({\n        comps: this.getComps()\n      });\n    }\n  }, {\n    key: \"getComps\",\n    value: function getComps() {\n      axios.get('https://kctbh9vrtdwd.statuspage.io/api/v2/components.json').then(function (res) {\n        console.log(res.data.components);\n      })[\"catch\"](function (e) {\n        console.log(\"Não foi possivel carregar o conteudo! Atualize a página! \" + e);\n      });\n      return res.data.components;\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.getComps();\n    } //\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"GitHub Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 6\n        }, this), this.state.comps.map(function (comp) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"_1WX-ZNh1u_6_qUFuQYrWF\",\n            children: [comp.name, \" | \", comp.status == 'operational' ? 'Funcionando' : 'Fora do ar']\n          }, comp.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, _this2);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.getComps(),\n          children: \"Atualizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this);\n    }\n  }]);\n\n  return compsGitHub;\n}(React.Component);\n/*\r\nclass compsStatus extends React.Component{\r\n\r\n\tlet statusC = props.status;\r\n\tlet compGit = props.name;\r\n\tlet text = '';\r\n\r\n\trender(){\r\n\t\t\r\n\r\n\t\tif(statusC == 'operational'){\r\n\t\t\tstatusC = 'Funcionando';\r\n\t\t\ttext = statusC;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tstatusC = 'Fora do ar';\r\n\t\t\ttext = statusC + ' - Motivo: ' + this.props.status;\r\n\t\t}\r\n\t\treturn(\r\n\r\n\t\t\t<p>text</p>\r\n\r\n\t\t)\r\n\t}\r\n}*/\n\n\nexport default compsGitHub;","map":{"version":3,"sources":["C:/Users/estagio/Documents/app-ideas/github-status/pages/index.js"],"names":["React","Component","ReactDOM","axios","compsGitHub","comps","aviso","setState","getComps","get","then","res","console","log","data","components","e","state","map","comp","name","status","id"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;IAGMC,W;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,KAAK,EAAE;AAFD,K;;;;;;;8BAKC;AACR,WAAKC,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAE,KAAKG,QAAL;AAAT,OAAd;AACA;;;+BAES;AACTL,MAAAA,KAAK,CAACM,GAAN,CAAU,2DAAV,EACIC,IADJ,CACS,UAAAC,GAAG,EAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,UAArB;AACA,OAHJ,WAIU,UAAAC,CAAC,EAAI;AACXJ,QAAAA,OAAO,CAACC,GAAR,CAAY,8DAA8DG,CAA1E;AACA,OANJ;AAQG,aAAOL,GAAG,CAACG,IAAJ,CAASC,UAAhB;AACH;;;yCAEmB;AACnB,WAAKP,QAAL;AACA,K,CAGH;;;;6BACW;AAAA;;AACR,0BACC;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAEO,KAAKS,KAAL,CAAWZ,KAAX,CAAiBa,GAAjB,CAAqB,UAAAC,IAAI;AAAA,8BAC1B;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA,uBACJA,IAAI,CAACC,IADD,SACWD,IAAI,CAACE,MAAL,IAAe,aAAf,GAA+B,aAA/B,GAA+C,YAD1D;AAAA,aAA6CF,IAAI,CAACG,EAAlD;AAAA;AAAA;AAAA;AAAA,oBAD0B;AAAA,SAAzB,CAFP,eAQK;AAAQ,UAAA,OAAO,EAAE,KAAKd,QAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARL;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAYC;;;;EAzCsBR,KAAK,CAACC,S;AA2ChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeG,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport './index.css';\r\n\r\n\r\nclass compsGitHub extends React.Component {\r\n  state = {\r\n    comps: [],\r\n    aviso: ''\r\n  }\r\n\r\n  setComp(){\r\n  \tthis.setState({ comps: this.getComps() });\r\n  }\r\n\r\n  getComps(){\r\n  \taxios.get('https://kctbh9vrtdwd.statuspage.io/api/v2/components.json')\r\n      .then(res => {\r\n      \tconsole.log(res.data.components);\r\n      })\r\n      .catch(e => {\r\n      \tconsole.log(\"Não foi possivel carregar o conteudo! Atualize a página! \" + e);\r\n      })\r\n\r\n      return res.data.components;\r\n  }\r\n\r\n  componentWillMount(){\r\n  \tthis.getComps();\r\n  }\r\n\r\n\r\n//\r\n  render() {\r\n  \treturn(\r\n  \t\t<div>\r\n  \t\t\t<h1>GitHub Status</h1>\r\n\t        { this.state.comps.map(comp => \r\n\t        \t<div className='_1WX-ZNh1u_6_qUFuQYrWF' key={comp.id}> \r\n\t\t\t\t\t{comp.name} | { comp.status == 'operational' ? 'Funcionando' : 'Fora do ar'} \r\n\t        \t</div>\t\r\n\t        )}\r\n\r\n\t        <button onClick={this.getComps()}>Atualizar</button>\r\n      \t</div>\r\n    \t)\r\n  \t}\r\n}\r\n/*\r\nclass compsStatus extends React.Component{\r\n\r\n\tlet statusC = props.status;\r\n\tlet compGit = props.name;\r\n\tlet text = '';\r\n\r\n\trender(){\r\n\t\t\r\n\r\n\t\tif(statusC == 'operational'){\r\n\t\t\tstatusC = 'Funcionando';\r\n\t\t\ttext = statusC;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tstatusC = 'Fora do ar';\r\n\t\t\ttext = statusC + ' - Motivo: ' + this.props.status;\r\n\t\t}\r\n\t\treturn(\r\n\r\n\t\t\t<p>text</p>\r\n\r\n\t\t)\r\n\t}\r\n}*/\r\n\r\nexport default compsGitHub;"]},"metadata":{},"sourceType":"module"}